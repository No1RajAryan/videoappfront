{"version":3,"sources":["Header.js","SidebarRow.js","Sidebar.js","Body.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Divider","orientation","placeholder","type","Button","variant","color","SidebarRow","Icon","title","Sidebar","HomeIcon","TvIcon","MovieIcon","LiveTvIcon","AirplayIcon","SportsIcon","ChildCareIcon","FavoriteIcon","AccountCircleIcon","Body","src","alt","width","height","frameborder","allow","allowfullscreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.924eff8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport LoupeIcon from '@material-ui/icons/Loupe';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className='header__left'>\r\n      <LoupeIcon className='loupeIcon'/>\r\n      <Divider orientation=\"vertical\" />\r\n      <label>Cinemeye</label>\r\n      </div>\r\n\r\n      <div className='header__input'>\r\n      <input placeholder=\" &nbsp;Search..\" type='text' />\r\n      <Divider orientation=\"vertical\" />\r\n      <SearchIcon className='header__inputButton'/>\r\n      </div>\r\n      <div className='header__right'>\r\n      <Button  variant=\"contained\" color=\"primary\"> <PublicIcon/>&nbsp;  EN</Button>\r\n      <Button variant=\"contained\" color=\"secondary\">Login</Button>\r\n      <Button variant=\"contained\" color=\"primary\">Try Now</Button>\r\n   </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './SidebarRow.css';\r\n\r\n\r\nfunction SidebarRow({Icon ,title}) {\r\n    return (\r\n        <div className='sidebarRow'>\r\n        <Icon className='sidebarRow__icon'/>\r\n        <h2 className='sidebarRow__title'>{title}</h2>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarRow\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarRow from \"./SidebarRow\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport TvIcon from \"@material-ui/icons/Tv\";\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport SportsIcon from \"@material-ui/icons/Sports\";\r\nimport AirplayIcon from \"@material-ui/icons/Airplay\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport AppleIcon from \"@material-ui/icons/Apple\";\r\nimport ShopIcon from \"@material-ui/icons/Shop\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__body\">\r\n        <SidebarRow Icon={HomeIcon} title=\"Main Page\" />\r\n\r\n        <SidebarRow Icon={TvIcon} title=\"Tv-channels\" />\r\n\r\n        <SidebarRow Icon={MovieIcon} title=\"Movies\" />\r\n\r\n        <SidebarRow Icon={LiveTvIcon} title=\"TV series\" />\r\n\r\n        <SidebarRow Icon={AirplayIcon} title=\"Concerts\" />\r\n\r\n        <SidebarRow Icon={SportsIcon} title=\"Sport\" />\r\n\r\n        <SidebarRow Icon={ChildCareIcon} title=\"For kids\" />\r\n\r\n        <SidebarRow Icon={FavoriteIcon} title=\"Favourites\" />\r\n\r\n        <SidebarRow Icon={AccountCircleIcon} title=\"Personal data\" />\r\n      </div>\r\n      <div className=\"sidebar__footer\">\r\n        <div className=\"sidebar__footerOption\">\r\n          <AppleIcon />\r\n          <span className=\"sidebar__footerOptionOne\">\r\n            Available on the\r\n            <br />\r\n          </span>\r\n          <span className=\"sidebar__footerOptionTwo\">App Store</span>\r\n        </div>\r\n        <div className=\"sidebar__footerOption\">\r\n          <ShopIcon />\r\n          <span className=\"sidebar__footerOptionOne\">\r\n            GET IT ON\r\n            <br />\r\n          </span>\r\n          <span className=\"sidebar__footerOptionTwo\">Google Play</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n// import VideoCard from './VideoCard';\r\nimport \"./Body.css\";\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className='body'>\r\n            <div className=\"body__header\"> \r\n             <img className='body__headerImg' src='https://source.unsplash.com/600x300/?Avengers' alt=''/>\r\n             <p className='body__headerPara'><strong>Avengers :</strong><br/>Audio Description (AD) provides linguistic descriptions\r\n                of movies and allows visually impaired people to follow\r\n                a movie along with their peers. Such descriptions are\r\n                by design mainly visual and thus naturally form an interesting \r\n                data source for computer vision and computational linguistics.</p>\r\n            </div>\r\n            <div className='body__videos'>\r\n                {/* <VideoCard \r\n                  title='Become a web developer'\r\n                  views='2.3 B views'\r\n                  timestamp=' 3 days ago'\r\n                  channelImage='https://source.unsplash.com/400x200/?Flower'\r\n                  channel='Raj Aryan'\r\n                  image='https://source.unsplash.com/400x300/?Flower'\r\n                /> */}\r\n                <div className='body__videosOne'>\r\n                <iframe title='mobile' className='bodyVideos__videos'width=\"260\" height=\"150\" \r\n                src=\"https://www.youtube.com/embed/x4eHK6KWobA\" \r\n                frameborder=\"0\" allow=\"accelerometer;  clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                allowfullscreen>\r\n                </iframe>\r\n                <p>LG Wing Unboxing </p>\r\n                </div>\r\n                <div className='body__videosOne'>\r\n                <iframe title='nature' className='bodyVideos__videos'width=\"260\" height=\"150\" \r\n                src=\"https://www.youtube.com/embed/IUN664s7N-c\" \r\n                frameborder=\"0\" allow=\"accelerometer;  clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                allowfullscreen>\r\n                </iframe>\r\n                <p>The Breathtaking Beauty of Nature </p>\r\n                </div>\r\n                <div className='body__videosOne'>\r\n                <iframe title='nature2' width=\"260\" className='bodyVideos__videos' height=\"150\" src=\"https://www.youtube.com/embed/LXb3EKWsInQ\" frameborder=\"0\" allow=\"accelerometer;\r\n                 autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                <p>COSTA RICA IN 4K 60fps </p>\r\n                </div>\r\n                \r\n                \r\n\r\n            </div>\r\n                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import React from 'react';\nimport Header from './Header'\nimport Sidebar from './Sidebar'\nimport Body from './Body'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     \n         {/* header */}\n         <Header/>\n         <div className='app__page'>     \n           {/* sidebar */}\n          <Sidebar/>\n          <Body />\n         </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}